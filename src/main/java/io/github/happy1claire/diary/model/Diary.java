package io.github.happy1claire.diary.model;

import jakarta.persistence.*;
import java.time.LocalDateTime;
import java.util.Objects;

/**
 * Entity class representing a diary entry.
 */
@Entity
@Table(name = "diary")
public class Diary implements Comparable<Diary> {

    /** The primary key of the diary entry.
     * Auto-generated by the database.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long diaryId;

    /**
     * The title of the diary entry.
     * Cannot be null and has a maximum length of 100 characters.
     */
    @Column(length = 100)
    private String title;

    /**
     * The main textual content of the diary.
     * Stored as TEXT to allow long entries.
     */
    @Column(columnDefinition = "TEXT")
    private String content;

    /**
     * The timestamp when the diary entry was created.
     * Cannot be null.
     */
    @Column(name = "created_at", nullable = false)
    private LocalDateTime createdAt;

    /**
     * The timestamp when the diary entry was last updated.
     */
    @Column(name = "updated_at")
    private LocalDateTime updatedAt;

    /**
     * The ID of the user who owns this diary entry.
     * Linked to database.
     */
    @Column(name = "user_id", nullable = false)
    private String userId;

    /**
     * The mood of the diary entry, stored as a string in the database.
     */
    @Enumerated(EnumType.STRING)
    @Column(name = "mood")
    private Mood mood;

    /**
     * An optional image URL associated with the diary entry.
     * Useful for visual journaling.
     */
    @Column(name = "image_url")
    private String imageUrl;

    /**
     * Gets the diary ID.
     * @return the diary ID
     */
    public Long getDiaryId() {
        return diaryId;
    }

    /**
     * Sets the diary ID.
     * @param diaryId the diary ID to set
     */
    public void setDiaryId(Long diaryId) {
        this.diaryId = diaryId;
    }

    /**
     * Gets the title of the diary entry.
     * @return the title
     */
    public String getTitle() {
        return title;
    }

    /**
     * Sets the title of the diary entry.
     * @param title the title to set
     */
    public void setTitle(String title) {
        this.title = title;
    }

    /**
     * Gets the content of the diary entry.
     * @return the content
     */
    public String getContent() {
        return content;
    }

    /**
     * Sets the content of the diary entry.
     * @param content the content to set
     */
    public void setContent(String content) {
        this.content = content;
    }

    /**
     * Gets the creation timestamp.
     * @return the createdAt timestamp
     */
    public LocalDateTime getCreatedAt() {
        return createdAt;
    }

    /**
     * Sets the creation timestamp.
     * @param createdAt the timestamp to set
     */
    public void setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
    }

    /**
     * Gets the last updated timestamp.
     * @return the updatedAt timestamp
     */
    public LocalDateTime getUpdatedAt() {
        return updatedAt;
    }

    /**
     * Sets the last updated timestamp.
     * @param updatedAt the timestamp to set
     */
    public void setUpdatedAt(LocalDateTime updatedAt) {
        this.updatedAt = updatedAt;
    }

    /**
     * Gets the user ID who owns this diary entry.
     * @return the user ID
     */
    public String getUserId() {
        return userId;
    }

    /**
     * Sets the user ID for this diary entry.
     * @param userId the user ID to set
     */
    public void setUserId(String userId) {
        this.userId = userId;
    }

    /**
     * Gets the mood of the diary entry.
     * @return the mood
     */
    public Mood getMood() {
        return mood;
    }

    /**
     * Sets the mood of the diary entry.
     * @param mood the mood to set
     */
    public void setMood(Mood mood) {
        this.mood = mood;
    }

    /**
     * Gets the image URL associated with the diary entry.
     * @return the image URL
     */
    public String getImageUrl() {
        return imageUrl;
    }

    /**
     * Sets the image URL associated with the diary entry.
     * @param imageUrl the image URL to set
     */
    public void setImageUrl(String imageUrl) {
        this.imageUrl = imageUrl;
    }

    // Comparable Implementation

    /**
     * Compares this diary entry with another based on creation timestamp.
     * @param other the other diary entry to compare to
     * @return comparison result based on createdAt
     */
    @Override
    public int compareTo(Diary other) {
        return this.diaryId.compareTo(other.diaryId);
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Diary diary)) return false;
        return Objects.equals(diaryId, diary.diaryId);
    }

    @Override
    public int hashCode() {
        return Objects.hash(diaryId);
    }

    @Override
    public String toString() {
        return "Diary{" +
                "diaryId=" + diaryId +
                ", title='" + title + '\'' +
                ", createdAt=" + createdAt +
                ", userId='" + userId + '\'' +
                ", mood=" + mood +
                '}';
    }

}
